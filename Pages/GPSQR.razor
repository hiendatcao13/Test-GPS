@page "/hello"

<h1>Welcome to GPS</h1>
<br>

<h5>We need your location through GPS system. Please click "Agree" button below to allow the permission.</h5>
<button class="location-btn" onclick="getLocation()">üìç L·∫•y v·ªã tr√≠ hi·ªán t·∫°i</button>

<style>
.location-btn {
  background-color: #00aaff;
  color: white;
  border: none;
  padding: 12px 20px;
  font-size: 16px;
  border-radius: 8px;
  cursor: pointer;
  box-shadow: 0 4px 6px rgba(0,0,0,0.1);
  transition: background-color 0.3s ease, transform 0.2s ease;
}

.location-btn:hover {
  background-color: #008fcc;
  transform: translateY(-2px);
}

.location-btn:active {
  transform: translateY(0);
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}
</style>



<script>
function getLocation() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(successCallback, errorCallback, {
  enableHighAccuracy: true,
  timeout: 10000,          // th·ªùi gian ch·ªù t·ªëi ƒëa 10 gi√¢y
  maximumAge: 0
});;
  } else {
    alert("Geolocation kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£ tr√™n tr√¨nh duy·ªát n√†y.");
  }
}

function successCallback(position) {
  var latitude = position.coords.latitude;
  var longitude = position.coords.longitude;

  // G·ª≠i d·ªØ li·ªáu v·ªÅ server qua AJAX ho·∫∑c form
  sendLocationToServer(latitude, longitude);
}

function errorCallback(error) {
  switch(error.code) {
    case error.PERMISSION_DENIED:
      alert("Ng∆∞·ªùi d√πng t·ª´ ch·ªëi quy·ªÅn ƒë·ªãnh v·ªã.");
      break;
    case error.POSITION_UNAVAILABLE:
      alert("V·ªã tr√≠ kh√¥ng kh·∫£ d·ª•ng.");
      break;
    case error.TIMEOUT:
      alert("L·∫•y v·ªã tr√≠ qu√° th·ªùi gian cho ph√©p.");
      break;
    case error.UNKNOWN_ERROR:
      alert("L·ªói kh√¥ng x√°c ƒë·ªãnh x·∫£y ra.");
      break;
  }
}

function sendLocationToServer(lat, lon) {
  fetch('/Location/ReceiveLocation', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ latitude: lat, longitude: lon })
  })
  .then(response => response.text())
  .then(data => console.log(data))
  .catch(error => console.error(error));
}
</script>

@code{
    private async Task GetCurrentLocation()
    {

    }
}